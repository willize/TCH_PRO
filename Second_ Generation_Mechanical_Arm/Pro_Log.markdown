#二代机械手
##18-6-29 程序设计计划
设计目标：
>1. 具有示教模式
2. 采用程序框架采用FreeRTOS
3. 上ROS操作系统
4. 控制芯片采用STM32F407ZG

设计细节：
>1. 步进选用S型加减速控制
>2. 步进电机的细分数：X-2000，Y-2000，Z-1000。
>3. 步进电机脉冲产生采用TIM10-X，TIM11-Y，TIM13-Z（分别对应输出通道为PF6，PF7，PF8）,因为他们只有一个单通道，所以采用。
>4. 三个电机的脉冲反馈采用TIM2-X,TIM3-Y,TIM5-Z(分别对用的通道PA5，PB3，PA6，PA7,PA0,PA1）点编码器模式。
>5. 定时器打开TIM4用于生成4路PWM波。TIM6,TIM7用于延时计数，时间间隔采集、发送串口的数据。
>6. SPI1发送打胶机的点给W25Q128。
>7. 串口USART1与示教的屏幕链接，USART2与ROS操作板链接，USART3串口调试接口。
>8. 电机方向GPIO，按键GPIO，限位开关GPIO。

示教功能：
>1. 边运行机械臂边储存定位点的功能。
>2. 应该具有粗调和微调的功能。
>3. 示教时采集的坐标也就是各轴电机做了多远，应该采集的是编码器的值，不应该是统计的步数。

PCB板注意事项：
>1. 应该具有5V、12V、24V的电源输出接口。
>2. 留出wifi，蓝牙模块接口。
 
##18-7-4 程序搭建
>建立机械手坐标系在SCARA_Alg.c

需要思考的问题：脉冲数目和编码器的数目是否一致，如若丢步怎么办。
如果只根据编码值不能用加减速。所以还要采用记录脉冲值计数，但是与ros通信时应该怎么规定要看看ros了。
现在先采用脉冲计数方法。

##18-7-5 程序搭建
>写入了电机的控制算法

想法：把加减速的矩阵写到flash，只有第一次计算一下以后每次开机都读一下flash的值。
>可以调试的时候计算一遍存入flash中，以后屏蔽再从flash中读出。

想法：按下屏幕的按键，机械臂可以一直动，不需要一下下按。

##18-7-6 电机控制确定文件搭建

>控制的驱动文件

想法：完成点位控制到一点停止，怎么运用标志位判断。
> 设置一个最大的运动点，每次到达点位时判断是否为最后一个点。

> 设置

想法：还是根据编码器的值：到达一个点时判断是否编码器值等于预设的值。

想法：需要建立坐标系，可以是轴臂运动了多少，XY为角度，Z为高度。

编码器还需要写
##18-7-10 加入了串口接受中断
##18-7-11 测试程序控制电机
>要记住一定要写一部分程序测试一部分，要不调试很吃力，就因为未给减速的计算变量没有赋值，导致系统错误。

加减速调试完毕；
明天调试屏幕控制；

##7-19 速度设置函数有问题 Z_Speed();
##7-20 屏幕控制机械臂程序完成

>接下来写运动数据储存代码。

##7-23 数据储存代码

>修改了电机控制函数去掉了方向的形式参数，由距离数据的正负直接决定运动方向'俯视顺时针方向为正，逆时针为负（即向右为正，像左为负），向下为正，向上为正。'

##7-24 代码储存搞定
>屏幕测试控制电机稳定。

